[
    {
        "id": "9f596410aa34be82",
        "type": "tab",
        "label": "Students",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5e5facf1b067d345",
        "type": "subflow",
        "name": "Insert User",
        "info": "Subflow to insert a new user into the database",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "8cd9bb2b4469a859"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 420,
            "y": 60,
            "wires": [
                {
                    "id": "efd05287983205f0",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "d6e00ead8a489696",
        "type": "group",
        "z": "9f596410aa34be82",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "6c401bd81df934f3",
            "97ab4d4f5138647c",
            "beed03c4141b46e6",
            "1aa458f02486822e"
        ],
        "x": 94,
        "y": 59,
        "w": 252,
        "h": 202,
        "label": "Hello World Endpoint"
    },
    {
        "id": "bf4ad5c8135f58c2",
        "type": "group",
        "z": "9f596410aa34be82",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "2954a7dd3efc9c82",
            "7a0fa2a7cb960bd4",
            "939367e7052a2f50",
            "ce64a567d76bedb5"
        ],
        "x": 394,
        "y": 39,
        "w": 342,
        "h": 222,
        "label": "Hello World Debugger"
    },
    {
        "id": "e09870e7c633099c",
        "type": "group",
        "z": "9f596410aa34be82",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f2b3e4ded67afbad",
            "9a550ba75400a78f",
            "62b98b3ea906e33d",
            "96b07662b89b666a",
            "4191c3d911cf8a22",
            "8bf56929902a80c1"
        ],
        "x": 34,
        "y": 279,
        "w": 332,
        "h": 282,
        "label": "Database Setup"
    },
    {
        "id": "d9a2ba9f351d361b",
        "type": "group",
        "z": "9f596410aa34be82",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "876f87ffd8314be2",
            "e4cb59b0d82a8735",
            "c06a7d9f40840a50"
        ],
        "x": 34,
        "y": 599,
        "w": 352,
        "h": 162,
        "label": "Group 4"
    },
    {
        "id": "f01a214dd6f91e17",
        "type": "group",
        "z": "9f596410aa34be82",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ae5a2784cd83275d",
            "37108743fad6e470",
            "b19b2f473c7041d0",
            "0580f7b16db329ad",
            "d0ae6a1988e2cb46",
            "2bc16b931430a8c6"
        ],
        "x": 554,
        "y": 599,
        "w": 332,
        "h": 282,
        "label": "Group 5"
    },
    {
        "id": "9f7572560510021c",
        "type": "global-config",
        "name": "global-config",
        "env": [
            {
                "name": "POSTGRES_URI",
                "value": "postgres://babiaraujo:babi@postgres:5432/study",
                "type": "str"
            }
        ]
    },
    {
        "id": "f87e68f1de38cf1c",
        "type": "knex-config",
        "connectionName": "db-connection",
        "uri": "${POSTGRES_URI}",
        "searchPath": "[\"public\"]",
        "ssl": false,
        "timezone": "${TZ}",
        "poolMin": "2",
        "poolMax": "10",
        "acquireTimeoutMillis": "30000",
        "createTimeoutMillis": "30000",
        "idleTimeoutMillis": "1000",
        "additionalKnexConf": "{}"
    },
    {
        "id": "8cd9bb2b4469a859",
        "type": "function",
        "z": "5e5facf1b067d345",
        "name": "Validate Request",
        "func": "const schema = flow.get('students-registration-schema')\ntry {\n    const result = await schema.validateAsync(msg.payload)\n    msg.payload = result\n    node.status({ fill: \"green\", shape: \"ring\", text: \"Payload is valid!\" });\n} catch (error) {\n    node.warn(error);\n    msg.payload = { error: error }\n    node.status({ fill: \"red\", shape: \"ring\", text: \"Payload is invalid!\" });\n} finally {\n    return msg\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once whenever the node is started.\nconst schema = Joi.object({\n    name: Joi.string().min(3).max(100).required(),\n    course: Joi.string().min(3).max(100).required(),\n})\n\nflow.set('students-registration-schema', schema)",
        "finalize": "",
        "libs": [
            {
                "var": "Joi",
                "module": "joi"
            }
        ],
        "x": 220,
        "y": 80,
        "wires": [
            [
                "5c8291cb65eb171d"
            ]
        ]
    },
    {
        "id": "5c8291cb65eb171d",
        "type": "switch",
        "z": "5e5facf1b067d345",
        "name": "Check Validation",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "error",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 400,
        "y": 80,
        "wires": [
            [
                "efd05287983205f0"
            ],
            [
                "b8e7b23423486524"
            ]
        ]
    },
    {
        "id": "efd05287983205f0",
        "type": "debug",
        "z": "5e5facf1b067d345",
        "name": "Show Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 40,
        "wires": []
    },
    {
        "id": "b8e7b23423486524",
        "type": "knex",
        "z": "5e5facf1b067d345",
        "name": "Insert into DB",
        "config": "f87e68f1de38cf1c",
        "query": "msg.payload",
        "output": true,
        "x": 600,
        "y": 120,
        "wires": [
            [
                "f3ad5f8e19610b31"
            ]
        ]
    },
    {
        "id": "f3ad5f8e19610b31",
        "type": "debug",
        "z": "5e5facf1b067d345",
        "name": "Show Success",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 120,
        "wires": []
    },
    {
        "id": "6c401bd81df934f3",
        "type": "http in",
        "z": "9f596410aa34be82",
        "g": "d6e00ead8a489696",
        "name": "",
        "url": "/hello",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "97ab4d4f5138647c"
            ]
        ]
    },
    {
        "id": "97ab4d4f5138647c",
        "type": "template",
        "z": "9f596410aa34be82",
        "g": "d6e00ead8a489696",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<h1>Hello World</h1>",
        "output": "str",
        "x": 210,
        "y": 160,
        "wires": [
            [
                "beed03c4141b46e6"
            ]
        ]
    },
    {
        "id": "beed03c4141b46e6",
        "type": "http response",
        "z": "9f596410aa34be82",
        "g": "d6e00ead8a489696",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 290,
        "y": 200,
        "wires": []
    },
    {
        "id": "1aa458f02486822e",
        "type": "comment",
        "z": "9f596410aa34be82",
        "g": "d6e00ead8a489696",
        "name": "Simple HTTP endpoint that returns 'Hello World'",
        "info": "",
        "x": 180,
        "y": 80,
        "wires": []
    },
    {
        "id": "2954a7dd3efc9c82",
        "type": "inject",
        "z": "9f596410aa34be82",
        "g": "bf4ad5c8135f58c2",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 510,
        "y": 80,
        "wires": [
            [
                "7a0fa2a7cb960bd4"
            ]
        ]
    },
    {
        "id": "7a0fa2a7cb960bd4",
        "type": "function",
        "z": "9f596410aa34be82",
        "g": "bf4ad5c8135f58c2",
        "name": "",
        "func": "msg.payload = 'Hello World'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 120,
        "wires": [
            [
                "939367e7052a2f50"
            ]
        ]
    },
    {
        "id": "939367e7052a2f50",
        "type": "debug",
        "z": "9f596410aa34be82",
        "g": "bf4ad5c8135f58c2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 160,
        "wires": []
    },
    {
        "id": "ce64a567d76bedb5",
        "type": "comment",
        "z": "9f596410aa34be82",
        "g": "bf4ad5c8135f58c2",
        "name": "Injects 'Hello World' into the debug node",
        "info": "",
        "x": 580,
        "y": 60,
        "wires": []
    },
    {
        "id": "f2b3e4ded67afbad",
        "type": "knex",
        "z": "9f596410aa34be82",
        "g": "e09870e7c633099c",
        "name": "Create Table Students",
        "config": "f87e68f1de38cf1c",
        "query": "CREATE TABLE IF NOT EXISTS students (id SERIAL PRIMARY KEY, name VARCHAR(100), course VARCHAR(100));",
        "output": false,
        "x": 160,
        "y": 320,
        "wires": [
            [
                "96b07662b89b666a"
            ]
        ]
    },
    {
        "id": "96b07662b89b666a",
        "type": "debug",
        "z": "9f596410aa34be82",
        "g": "e09870e7c633099c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 180,
        "y": 360,
        "wires": []
    },
    {
        "id": "9a550ba75400a78f",
        "type": "knex",
        "z": "9f596410aa34be82",
        "g": "e09870e7c633099c",
        "name": "Insert Student",
        "config": "f87e68f1de38cf1c",
        "query": "INSERT INTO students (name, course) VALUES ('Babi Araujo', 'Node-RED');",
        "output": true,
        "x": 140,
        "y": 420,
        "wires": [
            [
                "96b07662b89b666a"
            ]
        ]
    },
    {
        "id": "62b98b3ea906e33d",
        "type": "knex",
        "z": "9f596410aa34be82",
        "g": "e09870e7c633099c",
        "name": "Select All Students",
        "config": "f87e68f1de38cf1c",
        "query": "SELECT * FROM students;",
        "output": true,
        "x": 160,
        "y": 480,
        "wires": [
            [
                "96b07662b89b666a"
            ]
        ]
    },
    {
        "id": "2f81a1f7cf6a86b7",
        "type": "comment",
        "z": "9f596410aa34be82",
        "g": "e09870e7c633099c",
        "name": "Knex nodes for database operations",
        "info": "",
        "x": 160,
        "y": 280,
        "wires": []
    },
    {
        "id": "fe6f16d299db24f0",
        "type": "inject",
        "z": "9f596410aa34be82",
        "g": "e09870e7c633099c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 70,
        "y": 320,
        "wires": [
            [
                "f2b3e4ded67afbad"
            ]
        ]
    },
    {
        "id": "f87e68f1de38cf1c",
        "type": "knex_config",
        "name": "PostgresConfig",
        "client": "pg",
        "connection": "postgres://username:password@localhost:5432/test",
        "searchPath": "public"
    }
]
